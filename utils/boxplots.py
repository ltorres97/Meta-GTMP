import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import math


df = pd.DataFrame({'Metric': ['Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp'],\
                  'GIN':        np.asarray([1.0, 0.9956, 0.9956, 0.9956, 1.0, 1.0, 0.9956, 1.0, 0.9956, 1.0, 0.9956, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9956, 0.9956, 0.9956, 1.0, 0.9956, 0.9956, 0.9956, 0.9956, 1.0, 0.9956, 0.9956, 1.0, 1.0, 1.0]) ,
                  'GCN':        np.asarray([0.9425, 0.8142, 0.8982, 0.7832, 0.9513, 0.8894, 0.4978, 0.9022, 0.92, 0.9733, 0.8933, 0.8578, 0.7522, 0.8496, 0.9333, 0.8844, 0.969, 0.8717, 0.792, 0.8673, 0.9378, 0.8761, 0.9469, 0.969, 0.8584, 0.8496, 0.88, 0.9071, 0.9378, 0.8938]) ,
                  'GraphSAGE':  np.asarray([0.969, 0.9646, 0.9823, 0.969, 0.9602, 0.9733, 0.9823, 0.9735, 0.9644, 0.9823, 0.9558, 0.9823, 0.9779, 0.9866, 0.9867, 0.9381, 0.9779, 0.969, 0.9244, 0.9822, 0.9511, 0.9867, 0.9823, 0.9867, 0.9823, 0.969, 0.9779, 0.9823, 0.9823, 0.9467]) ,
                  'Meta-GTMP (GIN+TR)': np.asarray([0.9735, 0.9823, 0.9779, 0.9823, 0.9779, 0.9823, 0.9822, 0.9823, 0.9823, 0.9779, 0.9823, 0.9778, 0.9779, 0.9779, 0.9822, 0.9867, 0.9779, 0.9867, 0.9735, 0.9779, 0.9823, 0.9823, 0.9779, 0.9823, 0.9779, 0.9779, 0.9823, 0.9778, 0.9779, 0.9778])
                  })


df = df[['Metric','GIN','GCN','GraphSAGE','Meta-GTMP (GIN+TR)']]

df2 = pd.DataFrame({'Metric': ['Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn'],\
                  'GIN':        np.asarray([0.7802, 0.8154, 0.8074, 0.8555, 0.7783, 0.787, 0.8287, 0.7805, 0.8193, 0.7802, 0.8323, 0.7922, 0.7771, 0.7868, 0.7909, 0.787, 0.8177, 0.8032, 0.7984, 0.7925, 0.8262, 0.8165, 0.7883, 0.8116, 0.788, 0.8019, 0.8154, 0.7595, 0.7948, 0.7722]) ,
                  'GCN':        np.asarray([0.7799, 0.8872, 0.8355, 0.8833, 0.7699, 0.8106, 0.9428, 0.832, 0.8145, 0.7409, 0.8171, 0.8378, 0.8853, 0.8542, 0.812, 0.8078, 0.7479, 0.8109, 0.8769, 0.8423, 0.7809, 0.8242, 0.7721, 0.7489, 0.8361, 0.8626, 0.8317, 0.8339, 0.7751, 0.7818]) ,
                  'GraphSAGE':  np.asarray([0.7317, 0.7492, 0.7214, 0.7285, 0.7421, 0.7199, 0.7059, 0.7088, 0.7567, 0.6959, 0.7647, 0.7088, 0.712, 0.6731, 0.6438, 0.7712, 0.7114, 0.7569, 0.8103, 0.7047, 0.7955, 0.6703, 0.69, 0.6707, 0.7052, 0.7485, 0.7366, 0.6897, 0.6888, 0.7328]) ,
                  'Meta-GTMP (GIN+TR)': np.asarray([0.9014, 0.9014, 0.9001, 0.8975, 0.8985, 0.8979, 0.8969, 0.8972, 0.8969, 0.8995, 0.8969, 0.9008, 0.9024, 0.9011, 0.8985, 0.8969, 0.8969, 0.8966, 0.9014, 0.8995, 0.8969, 0.8972, 0.904, 0.8969, 0.9001, 0.8979, 0.8979, 0.9027, 0.8975, 0.8992])
                  })

df2 = df2[['Metric','GIN','GCN','GraphSAGE','Meta-GTMP (GIN+TR)']]

df3 = pd.DataFrame({'Metric': ['Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr'],\
                  'GIN':        np.asarray([1.0, 0.9996, 0.9996, 0.9996, 1.0, 1.0, 0.9996, 1.0, 0.9996, 1.0, 0.9996, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9996, 0.9996, 0.9996, 1.0, 0.9996, 0.9996, 0.9996, 0.9996, 1.0, 0.9996, 0.9996, 1.0, 1.0, 1.0]) ,
                  'GCN':        np.asarray([0.9946, 0.9849, 0.9912, 0.9824, 0.9954, 0.9901, 0.9627, 0.9915, 0.9929, 0.9974, 0.9906, 0.9878, 0.98, 0.9873, 0.9941, 0.9897, 0.997, 0.9886, 0.983, 0.9886, 0.9942, 0.9891, 0.995, 0.997, 0.9878, 0.9874, 0.9896, 0.9919, 0.9942, 0.9902]) ,
                  'GraphSAGE':  np.asarray([0.9969, 0.9966, 0.9982, 0.9969, 0.9961, 0.9973, 0.9982, 0.9973, 0.9966, 0.9981, 0.9958, 0.9982, 0.9977, 0.9986, 0.9985, 0.9942, 0.9977, 0.997, 0.9933, 0.9982, 0.9956, 0.9986, 0.9981, 0.9986, 0.9982, 0.997, 0.9978, 0.9981, 0.9981, 0.9947]) ,
                  'Meta-GTMP (GIN+TR)': np.asarray([0.9979, 0.9986, 0.9982, 0.9986, 0.9982, 0.9986, 0.9986, 0.9986, 0.9986, 0.9982, 0.9986, 0.9982, 0.9982, 0.9982, 0.9986, 0.9989, 0.9982, 0.9989, 0.9979, 0.9982, 0.9986, 0.9986, 0.9982, 0.9986, 0.9982, 0.9982, 0.9986, 0.9982, 0.9982, 0.9982])
                  })

df3 = df3[['Metric','GIN','GCN','GraphSAGE','Meta-GTMP (GIN+TR)']]

df4 = pd.DataFrame({'Metric': ['Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc'],\
                  'GIN':        np.asarray([0.7952, 0.8277, 0.8202, 0.8651, 0.7934, 0.8015, 0.8401, 0.7955, 0.8313, 0.7952, 0.8434, 0.8063, 0.7922, 0.8012, 0.8051, 0.8015, 0.8298, 0.8163, 0.8117, 0.8066, 0.8377, 0.8286, 0.8024, 0.8241, 0.8024, 0.8151, 0.8277, 0.7759, 0.8087, 0.7877]) ,
                  'GCN':        np.asarray([0.791, 0.8822, 0.8398, 0.8765, 0.7822, 0.816, 0.9127, 0.8367, 0.8217, 0.7566, 0.8223, 0.8392, 0.8762, 0.8539, 0.8202, 0.813, 0.763, 0.8151, 0.8711, 0.844, 0.7916, 0.8277, 0.784, 0.7639, 0.8377, 0.8617, 0.8349, 0.8389, 0.7861, 0.7895]) ,
                  'GraphSAGE':  np.asarray([0.7479, 0.7639, 0.7392, 0.7449, 0.7569, 0.737, 0.7247, 0.7268, 0.7708, 0.7154, 0.7777, 0.7274, 0.7301, 0.6943, 0.6672, 0.7825, 0.7295, 0.7714, 0.8181, 0.7235, 0.806, 0.6919, 0.7099, 0.6922, 0.7241, 0.7636, 0.753, 0.7096, 0.7087, 0.7473]) ,
                  'Meta-GTMP (GIN+TR)': np.asarray([0.9063, 0.9069, 0.9054, 0.9033, 0.9039, 0.9036, 0.9027, 0.903, 0.9027, 0.9048, 0.9027, 0.906, 0.9075, 0.9063, 0.9042, 0.903, 0.9024, 0.9027, 0.9063, 0.9048, 0.9027, 0.903, 0.909, 0.9027, 0.9054, 0.9033, 0.9036, 0.9078, 0.903, 0.9045])
                  })

df4 = df4[['Metric','GIN','GCN','GraphSAGE','Meta-GTMP (GIN+TR)']]

df5 = pd.DataFrame({'Metric': ['F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s'],\
                  'GIN':        np.asarray([0.8765, 0.8982, 0.8933, 0.922, 0.8753, 0.8808, 0.9062, 0.8767, 0.9005, 0.8765, 0.9083, 0.884, 0.8745, 0.8807, 0.8832, 0.8808, 0.8996, 0.8907, 0.8877, 0.8842, 0.9047, 0.8988, 0.8815, 0.8958, 0.8815, 0.8899, 0.8982, 0.8633, 0.8856, 0.8715]) ,
                  'GCN':        np.asarray([0.8743, 0.9335, 0.9067, 0.9302, 0.8682, 0.8914, 0.9527, 0.9048, 0.8949, 0.8502, 0.8955, 0.9066, 0.9302, 0.916, 0.8938, 0.8895, 0.8547, 0.891, 0.9269, 0.9096, 0.8748, 0.8992, 0.8695, 0.8553, 0.9057, 0.9208, 0.9038, 0.9061, 0.8711, 0.8738]) ,
                  'GraphSAGE':  np.asarray([0.844, 0.8554, 0.8375, 0.8418, 0.8505, 0.8362, 0.827, 0.8286, 0.8602, 0.82, 0.8651, 0.829, 0.831, 0.8042, 0.7829, 0.8686, 0.8306, 0.8606, 0.8925, 0.8261, 0.8843, 0.8022, 0.816, 0.8024, 0.8265, 0.8551, 0.8475, 0.8157, 0.8151, 0.8439]) ,
                  'Meta-GTMP (GIN+TR)': np.asarray([0.9472, 0.9475, 0.9466, 0.9454, 0.9457, 0.9455, 0.945, 0.9452, 0.945, 0.9463, 0.945, 0.947, 0.9479, 0.9472, 0.9459, 0.9452, 0.9448, 0.945, 0.9472, 0.9463, 0.945, 0.9452, 0.9488, 0.945, 0.9466, 0.9454, 0.9455, 0.9481, 0.9452, 0.9461])
                  })

df5 = df5[['Metric','GIN','GCN','GraphSAGE','Meta-GTMP (GIN+TR)']]

df6 = pd.DataFrame({'Metric': ['ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC'],\
                  'GIN':        np.asarray([0.8901, 0.9055, 0.9015, 0.9256, 0.8891, 0.8935, 0.9121, 0.8903, 0.9075, 0.8901, 0.9139, 0.8961, 0.8885, 0.8934, 0.8954, 0.8935, 0.9066, 0.8994, 0.897, 0.8963, 0.9109, 0.906, 0.8919, 0.9036, 0.894, 0.8987, 0.9055, 0.8798, 0.8974, 0.8861]) ,
                  'GCN':        np.asarray([0.8612, 0.8507, 0.8669, 0.8333, 0.8606, 0.85, 0.7203, 0.8671, 0.8673, 0.8571, 0.8552, 0.8478, 0.8187, 0.8519, 0.8726, 0.8461, 0.8585, 0.8413, 0.8344, 0.8548, 0.8594, 0.8501, 0.8595, 0.8589, 0.8473, 0.8561, 0.8558, 0.8705, 0.8564, 0.8378]) ,
                  'GraphSAGE':  np.asarray([0.8504, 0.8569, 0.8518, 0.8488, 0.8511, 0.8466, 0.8441, 0.8411, 0.8606, 0.8391, 0.8602, 0.8455, 0.8449, 0.8299, 0.8153, 0.8546, 0.8446, 0.863, 0.8674, 0.8435, 0.8733, 0.8285, 0.8362, 0.8287, 0.8438, 0.8588, 0.8572, 0.836, 0.8355, 0.8397]) ,
                  'Meta-GTMP (GIN+TR)': np.asarray([0.9374, 0.9419, 0.939, 0.9399, 0.9382, 0.9401, 0.9396, 0.9398, 0.9396, 0.9387, 0.9396, 0.9393, 0.9401, 0.9395, 0.9404, 0.9418, 0.9374, 0.9416, 0.9374, 0.9387, 0.9396, 0.9398, 0.9409, 0.9396, 0.939, 0.9379, 0.9401, 0.9403, 0.9377, 0.9385])
                  })

df6 = df6[['Metric','GIN','GCN','GraphSAGE','Meta-GTMP (GIN+TR)']]

df_final = pd.concat([df, df2, df3, df4, df5, df6], ignore_index = True, sort = False)

sns.set(style = "ticks")

dd=pd.melt(df_final,id_vars=['Metric'],value_vars=['GIN','GCN','GraphSAGE','Meta-GTMP (GIN+TR)'],var_name='Models')
fig, ax = plt.subplots()
ax = sns.boxplot(x='Metric',y='value',data=dd,hue='Models', ax=ax, palette="mako_r", boxprops=dict(alpha=.2), linewidth=0.5, showfliers=False)
#plt.setp(ax.artists,fill=False) 
ylims=ax.get_ylim()
sns.stripplot(x="Metric", y="value", hue='Models', data=dd, dodge=True, palette="mako_r", ax=ax, ec='k', linewidth=0,  size=2.5, alpha = 1)
ax.set(ylim=ylims)
#ax.axhline(y =0.719, ls='--', c='darkred', linewidth = 0.5)
ax.set(xlabel='', ylabel='Score')
sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))
#plt.legend([],[],frameon = False)
fig.set_figwidth(6.5)
fig.set_figheight(3.5)
handles, labels = ax.get_legend_handles_labels()
ax.legend(handles[:4], labels[:4], bbox_to_anchor=(1, 1.02), loc='upper left')
sns.move_legend(ax, "lower center", bbox_to_anchor=(.5, 1), ncol=4, title=None, frameon=False, fontsize=10)
plt.savefig('boxplot_metrics_ames_5.png', dpi=2000, bbox_inches='tight')


dd=pd.melt(df_final,id_vars=['Metric'],value_vars=['GIN','GCN','GraphSAGE','Meta-GTMP (GIN+TR)'],var_name='Models')
fig, ax = plt.subplots()
sns.barplot(x='Metric',y='value',data=dd,hue='Models', ax=ax, palette="YlGnBu", linewidth=0.85, errorbar="sd")
#sns.stripplot(x="Metric", y="value", hue='Models', data=dd, dodge=True, palette="YlGnBu", ax=ax, ec='k', linewidth=0.5,  size=2, alpha = 0.7)
sns.set(style = 'white')
#ax.axhline(y =0.719, ls='--', c='darkred', linewidth = 0.5)
ax.set(xlabel='', ylabel='Score')
sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))
#plt.legend([],[],frameon = False)
fig.set_figwidth(10)
handles, labels = ax.get_legend_handles_labels()
ax.legend(handles[:4], labels[:4], bbox_to_anchor=(1, 1.02), loc='upper left')
sns.move_legend(ax, "lower center", bbox_to_anchor=(.5, 1), ncol=4, title=None, frameon=False, fontsize=10)
plt.savefig('barplot_metrics_ames_5.png', dpi=300, bbox_inches='tight')

###########################################################################################

df = pd.DataFrame({'Metric': ['Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp'],\
                  'GIN':        np.asarray([0.9819, 0.991, 0.9955, 0.9955, 0.9729, 1.0, 0.9864, 1.0, 0.9864, 0.9864, 1.0, 1.0, 0.9864, 1.0, 0.9864, 1.0, 1.0, 0.9864, 0.9864, 0.991, 0.9864, 0.9864, 0.9864, 0.9864, 0.9864, 0.9864, 0.9638, 0.9955, 0.9955, 0.9729]) ,
                  'GCN':        np.asarray([0.9231, 0.9455, 0.95, 0.9276, 0.8778, 0.8227, 0.8914, 0.9276, 0.8688, 0.8356, 0.8552, 0.9367, 0.8235, 0.9593, 0.9231, 0.8455, 0.8552, 0.9186, 0.9231, 0.6606, 0.9683, 0.9682, 0.7783, 0.819, 0.724, 0.9412, 0.9502, 0.8824, 0.8462, 0.9683]) ,
                  'GraphSAGE':  np.asarray([0.9367, 0.9548, 0.9729, 0.8054, 0.9683, 0.9636, 0.9273, 0.8959, 0.6335, 0.9273, 0.9729, 0.9276, 0.9502, 0.9593, 0.9186, 0.9091, 0.9548, 0.9457, 0.8824, 0.9636, 0.9638, 0.9502, 0.85, 0.9367, 0.9819, 0.9548, 0.9276, 0.9457, 0.7919, 0.9635]) ,
                  'Meta-GTMP (GIN+TR)': np.asarray([0.9774, 0.9819, 0.9818, 0.9774, 0.9774, 0.9819, 0.9774, 0.9819, 0.9774, 0.9818, 0.9819, 0.9819, 0.9818, 0.9819, 0.9819, 0.9819, 0.9818, 0.9773, 0.9774, 0.9774, 0.9864, 0.9773, 0.9774, 0.9774, 0.9774, 0.9818, 0.9774, 0.9773, 0.9819, 0.9773])
                  })


df = df[['Metric','GIN','GCN','GraphSAGE','Meta-GTMP (GIN+TR)']]

df2 = pd.DataFrame({'Metric': ['Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn'],\
                  'GIN':        np.asarray([0.8401, 0.8812, 0.8556, 0.844, 0.8242, 0.8226, 0.867, 0.8401, 0.8482, 0.8498, 0.8096, 0.8355, 0.8366, 0.8051, 0.8495, 0.8385, 0.8469, 0.8663, 0.8453, 0.8592, 0.8427, 0.8204, 0.866, 0.843, 0.8404, 0.8155, 0.8478, 0.7834, 0.8583, 0.8339]) ,
                  'GCN':        np.asarray([0.7591, 0.8039, 0.7793, 0.7922, 0.8171, 0.8806, 0.8152, 0.754, 0.8174, 0.867, 0.8064, 0.7964, 0.8219, 0.7397, 0.7459, 0.8301, 0.8472, 0.8126, 0.8045, 0.9136, 0.6675, 0.754, 0.8848, 0.8559, 0.8867, 0.7863, 0.7679, 0.8245, 0.8537, 0.7465]) ,
                  'GraphSAGE':  np.asarray([0.7559, 0.7184, 0.7203, 0.82, 0.7277, 0.6741, 0.7498, 0.8275, 0.9055, 0.799, 0.73, 0.7744, 0.7358, 0.7232, 0.7601, 0.7806, 0.7604, 0.7569, 0.8071, 0.7217, 0.7041, 0.7452, 0.834, 0.7705, 0.6879, 0.7397, 0.7591, 0.7588, 0.8229, 0.7383]) ,
                  'Meta-GTMP (GIN+TR)': np.asarray([0.8903, 0.8958, 0.8942, 0.9032, 0.8916, 0.8899, 0.9006, 0.886, 0.8906, 0.8883, 0.888, 0.8932, 0.8961, 0.8916, 0.8903, 0.886, 0.8861, 0.9074, 0.8916, 0.8983, 0.889, 0.8922, 0.8916, 0.8958, 0.9013, 0.8903, 0.8951, 0.9071, 0.9029, 0.8922])
                  })

df2 = df2[['Metric','GIN','GCN','GraphSAGE','Meta-GTMP (GIN+TR)']]

df3 = pd.DataFrame({'Metric': ['Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr'],\
                  'GIN':        np.asarray([0.9985, 0.9993, 0.9996, 0.9996, 0.9976, 1.0, 0.9989, 1.0, 0.9989, 0.9989, 1.0, 1.0, 0.9988, 1.0, 0.9989, 1.0, 1.0, 0.9989, 0.9989, 0.9992, 0.9988, 0.9988, 0.9989, 0.9988, 0.9988, 0.9988, 0.997, 0.9996, 0.9996, 0.9977]) ,
                  'GCN':        np.asarray([0.9928, 0.9952, 0.9955, 0.9935, 0.9894, 0.9859, 0.9906, 0.9932, 0.9886, 0.9867, 0.9873, 0.9943, 0.9849, 0.9961, 0.9927, 0.9869, 0.9879, 0.9929, 0.9932, 0.9741, 0.9966, 0.997, 0.9824, 0.9851, 0.9782, 0.9947, 0.9954, 0.9899, 0.9873, 0.997]) ,
                  'GraphSAGE':  np.asarray([0.994, 0.9955, 0.9973, 0.9833, 0.9969, 0.9962, 0.9931, 0.9911, 0.9719, 0.9936, 0.9973, 0.9934, 0.9952, 0.996, 0.9924, 0.9918, 0.9958, 0.9949, 0.9897, 0.9964, 0.9963, 0.9952, 0.9874, 0.9942, 0.9981, 0.9956, 0.9932, 0.9949, 0.9822, 0.9965]) ,
                  'Meta-GTMP (GIN+TR)': np.asarray([0.9982, 0.9986, 0.9986, 0.9982, 0.9982, 0.9985, 0.9982, 0.9985, 0.9982, 0.9985, 0.9985, 0.9986, 0.9986, 0.9985, 0.9985, 0.9985, 0.9985, 0.9982, 0.9982, 0.9982, 0.9989, 0.9982, 0.9982, 0.9982, 0.9982, 0.9985, 0.9982, 0.9982, 0.9986, 0.9982])
                  })

df3 = df3[['Metric','GIN','GCN','GraphSAGE','Meta-GTMP (GIN+TR)']]

df4 = pd.DataFrame({'Metric': ['Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc'],\
                  'GIN':        np.asarray([0.8495, 0.8885, 0.865, 0.8541, 0.8341, 0.8344, 0.8749, 0.8508, 0.8574, 0.8589, 0.8224, 0.8465, 0.8465, 0.8181, 0.8586, 0.8492, 0.8571, 0.8743, 0.8547, 0.868, 0.8523, 0.8314, 0.874, 0.8526, 0.8502, 0.8269, 0.8556, 0.7976, 0.8674, 0.8432]) ,
                  'GCN':        np.asarray([0.7701, 0.8133, 0.7906, 0.8012, 0.8211, 0.8767, 0.8202, 0.7656, 0.8208, 0.865, 0.8097, 0.8057, 0.8221, 0.7544, 0.7577, 0.8311, 0.8477, 0.8196, 0.8124, 0.8967, 0.6876, 0.7683, 0.8776, 0.8535, 0.8758, 0.7967, 0.7801, 0.8284, 0.8532, 0.7613]) ,
                  'GraphSAGE':  np.asarray([0.768, 0.7341, 0.7372, 0.819, 0.7438, 0.6934, 0.7616, 0.832, 0.8873, 0.8076, 0.7462, 0.7846, 0.7502, 0.739, 0.7707, 0.7891, 0.7734, 0.7695, 0.8121, 0.7378, 0.7215, 0.7589, 0.835, 0.7816, 0.7076, 0.7541, 0.7704, 0.7713, 0.8208, 0.7532]) ,
                  'Meta-GTMP (GIN+TR)': np.asarray([0.8961, 0.9015, 0.9, 0.9082, 0.8973, 0.8961, 0.9057, 0.8924, 0.8964, 0.8946, 0.8943, 0.8991, 0.9018, 0.8976, 0.8964, 0.8924, 0.8924, 0.9121, 0.8973, 0.9036, 0.8955, 0.8979, 0.8973, 0.9012, 0.9063, 0.8964, 0.9006, 0.9118, 0.9082, 0.8979])
                  })

df4 = df4[['Metric','GIN','GCN','GraphSAGE','Meta-GTMP (GIN+TR)']]

df5 = pd.DataFrame({'Metric': ['F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s'],\
                  'GIN':        np.asarray([0.9124, 0.9365, 0.922, 0.9152, 0.9027, 0.9027, 0.9283, 0.9131, 0.9174, 0.9183, 0.8948, 0.9104, 0.9105, 0.892, 0.9182, 0.9121, 0.9171, 0.9279, 0.9157, 0.9239, 0.9142, 0.9009, 0.9277, 0.9144, 0.9128, 0.8979, 0.9164, 0.8784, 0.9236, 0.9085]) ,
                  'GCN':        np.asarray([0.8604, 0.8894, 0.8742, 0.8815, 0.895, 0.9303, 0.8943, 0.8572, 0.8949, 0.923, 0.8877, 0.8844, 0.8961, 0.849, 0.8518, 0.9017, 0.9122, 0.8937, 0.8889, 0.9429, 0.7995, 0.8587, 0.931, 0.916, 0.9302, 0.8783, 0.867, 0.8997, 0.9156, 0.8538]) ,
                  'GraphSAGE':  np.asarray([0.8588, 0.8345, 0.8365, 0.8943, 0.8413, 0.8041, 0.8545, 0.9019, 0.9375, 0.8857, 0.843, 0.8703, 0.8461, 0.838, 0.8609, 0.8736, 0.8623, 0.8597, 0.8891, 0.8371, 0.8251, 0.8523, 0.9042, 0.8681, 0.8145, 0.8488, 0.8606, 0.861, 0.8955, 0.8482]) ,
                  'Meta-GTMP (GIN+TR)': np.asarray([0.9411, 0.9444, 0.9435, 0.9483, 0.9419, 0.9411, 0.9469, 0.9389, 0.9413, 0.9402, 0.94, 0.9429, 0.9446, 0.942, 0.9413, 0.9389, 0.939, 0.9507, 0.9419, 0.9456, 0.9407, 0.9422, 0.9419, 0.9442, 0.9473, 0.9413, 0.9438, 0.9505, 0.9483, 0.9422])
                  })

df5 = df5[['Metric','GIN','GCN','GraphSAGE','Meta-GTMP (GIN+TR)']]

df6 = pd.DataFrame({'Metric': ['ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC'],\
                  'GIN':        np.asarray([0.911, 0.9361, 0.9255, 0.9197, 0.8985, 0.9113, 0.9267, 0.92, 0.9173, 0.9181, 0.9048, 0.9178, 0.9115, 0.9026, 0.9179, 0.9192, 0.9234, 0.9264, 0.9158, 0.9251, 0.9145, 0.9034, 0.9262, 0.9147, 0.9134, 0.9009, 0.9058, 0.8895, 0.9269, 0.9034]) ,
                  'GCN':        np.asarray([0.8411, 0.8747, 0.8646, 0.8599, 0.8475, 0.8517, 0.8533, 0.8408, 0.8431, 0.8513, 0.8308, 0.8665, 0.8227, 0.8495, 0.8345, 0.8378, 0.8512, 0.8656, 0.8638, 0.7871, 0.8179, 0.8611, 0.8315, 0.8375, 0.8053, 0.8638, 0.8591, 0.8534, 0.8499, 0.8574]) ,
                  'GraphSAGE':  np.asarray([0.8463, 0.8366, 0.8466, 0.8127, 0.848, 0.8189, 0.8386, 0.8617, 0.7695, 0.8632, 0.8514, 0.851, 0.843, 0.8412, 0.8393, 0.8448, 0.8576, 0.8513, 0.8447, 0.8427, 0.834, 0.8477, 0.842, 0.8536, 0.8349, 0.8472, 0.8434, 0.8523, 0.8074, 0.8509]) ,
                  'Meta-GTMP (GIN+TR)': np.asarray([0.9338, 0.9388, 0.938, 0.9403, 0.9345, 0.9359, 0.939, 0.934, 0.934, 0.9351, 0.9349, 0.9375, 0.939, 0.9367, 0.9361, 0.934, 0.934, 0.9424, 0.9345, 0.9379, 0.9377, 0.9348, 0.9345, 0.9366, 0.9393, 0.9361, 0.9362, 0.9422, 0.9424, 0.9348])
                  })

df6 = df6[['Metric','GIN','GCN','GraphSAGE','Meta-GTMP (GIN+TR)']]

df_final = pd.concat([df, df2, df3, df4, df5, df6], ignore_index = True, sort = False)

sns.set(style = "ticks")

dd=pd.melt(df_final,id_vars=['Metric'],value_vars=['GIN','GCN','GraphSAGE','Meta-GTMP (GIN+TR)'],var_name='Models')
fig, ax = plt.subplots()
ax = sns.boxplot(x='Metric',y='value',data=dd,hue='Models', ax=ax, palette="mako_r", boxprops=dict(alpha=.2), linewidth=0.5, showfliers=False)
#plt.setp(ax.artists,fill=False) 
ylims=ax.get_ylim()
sns.stripplot(x="Metric", y="value", hue='Models', data=dd, dodge=True, palette="mako_r", ax=ax, ec='k', linewidth=0,  size=2.5, alpha = 1)
ax.set(ylim=ylims)
#ax.axhline(y =0.719, ls='--', c='darkred', linewidth = 0.5)
ax.set(xlabel='', ylabel='Score')
sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))
#plt.legend([],[],frameon = False)
fig.set_figwidth(6.5)
fig.set_figheight(3.5)
handles, labels = ax.get_legend_handles_labels()
ax.legend(handles[:4], labels[:4], bbox_to_anchor=(1, 1.02), loc='upper left')
sns.move_legend(ax, "lower center", bbox_to_anchor=(.5, 1), ncol=4, title=None, frameon=False, fontsize=10)
plt.savefig('boxplot_metrics_ames_10.png', dpi=2000, bbox_inches='tight')

dd=pd.melt(df_final,id_vars=['Metric'],value_vars=['GIN','GCN','GraphSAGE','Meta-GTMP (GIN+TR)'],var_name='Models')
fig, ax = plt.subplots()
ec = ['red', 'gray', 'black', 'blue']
sns.barplot(x='Metric',y='value',data=dd,hue='Models', ax=ax, palette="YlGnBu", linewidth=0.85, errorbar="sd", capsize = 0.05, errwidth = 3, ci = 'sd')
#sns.stripplot(x="Metric", y="value", hue='Models', data=dd, dodge=True, palette="YlGnBu", ax=ax, ec='k', linewidth=0.5,  size=2, alpha = 0.7)
sns.set(style = 'whitegrid')
#ax.axhline(y =0.719, ls='--', c='darkred', linewidth = 0.5)
ax.set(xlabel='', ylabel='Score')
sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))
#plt.legend([],[],frameon = False)
fig.set_figwidth(10)
handles, labels = ax.get_legend_handles_labels()
ax.legend(handles[:4], labels[:4], bbox_to_anchor=(1, 1.02), loc='upper left')
sns.move_legend(ax, "lower center", bbox_to_anchor=(.5, 1), ncol=4, title=None, frameon=False, fontsize=10)
plt.savefig('barplot_metrics_ames_10.png', dpi=300, bbox_inches='tight')


##### SINGLE-TASK MODELS #####


df = pd.DataFrame({'Experiment': ['5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot','5-shot'],\
                  'ST-TA98':        np.asarray([0.8447, 0.852, 0.8483, 0.8494, 0.8502, 0.8497, 0.8486, 0.8529, 0.8462, 0.8531, 0.8469, 0.8472, 0.8493, 0.8446, 0.847, 0.8557, 0.848, 0.8501, 0.8477, 0.8459, 0.8447, 0.8472, 0.8431, 0.8461, 0.843, 0.8434, 0.8463, 0.8462, 0.8525, 0.8444]),
                  'ST-TA100':        np.asarray([0.8646, 0.8726, 0.8672, 0.8669, 0.8681, 0.8618, 0.8643, 0.866, 0.864, 0.8674, 0.8663, 0.8647, 0.8666, 0.8676, 0.867, 0.8634, 0.8687, 0.8632, 0.8573, 0.8636, 0.8634, 0.8693, 0.8599, 0.8636, 0.871, 0.8634, 0.8648, 0.8574, 0.8644, 0.8675]),
                  'ST-TA102':        np.asarray([0.7831, 0.778, 0.7788, 0.8165, 0.7662, 0.7865, 0.7914, 0.7835, 0.778, 0.7798, 0.799, 0.8136, 0.7957, 0.8015, 0.7805, 0.7895, 0.8076, 0.7821, 0.7834, 0.8008, 0.7615, 0.7806, 0.7966, 0.7919, 0.7936, 0.8027, 0.7849, 0.7984, 0.7748, 0.7893]),
                  'ST-TA1535':        np.asarray([0.663, 0.683, 0.6987, 0.7015, 0.6918, 0.683, 0.701, 0.7089, 0.6837, 0.6911, 0.6923, 0.6867, 0.6859, 0.7006, 0.6878, 0.7033, 0.7088, 0.695, 0.6978, 0.6955, 0.6945, 0.6958, 0.6998, 0.6935, 0.6895, 0.6929, 0.6917, 0.6942, 0.6965, 0.6964]),
                  'ST-TA1537':        np.asarray([0.7502, 0.7585, 0.7532, 0.7315, 0.7457, 0.7501, 0.7491, 0.7388, 0.7477, 0.7587, 0.7384, 0.7557, 0.7449, 0.7506, 0.7531, 0.7512, 0.7425, 0.7477, 0.7598, 0.749, 0.74, 0.7411, 0.7498, 0.7629, 0.7422, 0.7437, 0.748, 0.749, 0.7325, 0.7465]),
                  'All-Tasks': np.asarray([0.9374, 0.9419, 0.939, 0.9399, 0.9382, 0.9401, 0.9396, 0.9398, 0.9396, 0.9387, 0.9396, 0.9393, 0.9401, 0.9395, 0.9404, 0.9418, 0.9374, 0.9416, 0.9374, 0.9387, 0.9396, 0.9398, 0.9409, 0.9396, 0.939, 0.9379, 0.9401, 0.9403, 0.9377, 0.9385])
                          
                  })


df = df[['Experiment','ST-TA98','ST-TA100','ST-TA102','ST-TA1535','ST-TA1537', 'All-Tasks']]

df2 = pd.DataFrame({'Experiment': ['10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot','10-shot'],\
                  'ST-TA98':        np.asarray([0.8523, 0.8552, 0.8573, 0.8531, 0.8546, 0.858, 0.8547, 0.862, 0.858, 0.8594, 0.8546, 0.8499, 0.8554, 0.8584, 0.8626, 0.8554, 0.8544, 0.8594, 0.8607, 0.8592, 0.8601, 0.8607, 0.8542, 0.8528, 0.8524, 0.8578, 0.862, 0.852, 0.856, 0.8524]),
                  'ST-TA100':        np.asarray([0.854, 0.8514, 0.8595, 0.8582, 0.8514, 0.8576, 0.865, 0.8577, 0.858, 0.8484, 0.8535, 0.8553, 0.8553, 0.8618, 0.8564, 0.8632, 0.8537, 0.8577, 0.8574, 0.8488, 0.8576, 0.8652, 0.8585, 0.8569, 0.8551, 0.8602, 0.8569, 0.8501, 0.8622, 0.859]),
                  'ST-TA102':        np.asarray([0.8129, 0.7956, 0.8107, 0.8189, 0.8105, 0.8011, 0.8039, 0.7959, 0.7926, 0.7972, 0.7975, 0.8019, 0.8217, 0.8006, 0.8186, 0.7959, 0.8191, 0.8019, 0.8035, 0.8127, 0.8142, 0.8053, 0.8094, 0.8086, 0.8079, 0.8075, 0.8014, 0.8186, 0.799, 0.8073]),
                  'ST-TA1535':        np.asarray([0.6774, 0.6847, 0.6894, 0.6815, 0.6894, 0.6831, 0.6687, 0.6854, 0.688, 0.6907, 0.6736, 0.6839, 0.6834, 0.6803, 0.6805, 0.6749, 0.6926, 0.6758, 0.6959, 0.6789, 0.6711, 0.6771, 0.6922, 0.6813, 0.6935, 0.6778, 0.6883, 0.6789, 0.6893, 0.6876]),
                  'ST-TA1537':        np.asarray([0.7584, 0.7542, 0.7526, 0.7569, 0.7534, 0.746, 0.7662, 0.7456, 0.767, 0.7673, 0.7594, 0.7639, 0.7634, 0.7558, 0.7542, 0.7497, 0.752, 0.746, 0.7552, 0.7533, 0.7471, 0.7547, 0.7471, 0.736, 0.7571, 0.7683, 0.7523, 0.757, 0.7558, 0.7574]),
                  'All-Tasks': np.asarray([0.9338, 0.9388, 0.938, 0.9403, 0.9345, 0.9359, 0.939, 0.934, 0.934, 0.9351, 0.9349, 0.9375, 0.939, 0.9367, 0.9361, 0.934, 0.934, 0.9424, 0.9345, 0.9379, 0.9377, 0.9348, 0.9345, 0.9366, 0.9393, 0.9361, 0.9362, 0.9422, 0.9424, 0.9348])
                  
                  })


df2 = df2[['Experiment','ST-TA98','ST-TA100','ST-TA102','ST-TA1535','ST-TA1537','All-Tasks']]

df_final = pd.concat([df, df2], ignore_index = True, sort = False)

sns.set(style = "ticks")

dd=pd.melt(df_final,id_vars=['Experiment'],value_vars=['ST-TA98','ST-TA100','ST-TA102','ST-TA1535','ST-TA1537','All-Tasks'],var_name='Models')
fig, ax = plt.subplots()
#colors = ["#ff8100","#fb9b50","#ffb347","#9fc0de","#0466c8", "#023e7d"]
ax = sns.barplot(x='value',y='Experiment',data=dd,hue='Models', ax=ax, palette="ch:start=.1,rot=-.2", saturation = 0.85, linewidth=0.85, errorbar="sd", capsize = 0.05, errwidth = 2)
#sns.stripplot(x="Metric", y="value", hue='Models', data=dd, dodge=True, palette="YlGnBu", ax=ax, ec='k', linewidth=0.5,  size=2, alpha = 0.7)
sns.set(style = 'whitegrid')
#ax.axhline(y =0.719, ls='--', c='darkred', linewidth = 0.5)
ax.set(xlabel='ROC-AUC score', ylabel='')
for container in ax.containers:
    ax.bar_label(container, fmt= '%.4f', padding=10)
xlims=ax.get_xlim()
ax.set(xlim=(0, 1.1))
ax.spines[['right', 'top']].set_visible(False)
sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))
#plt.legend([],[],frameon = False)
fig.set_figwidth(5)
fig.set_figheight(5)
handles, labels = ax.get_legend_handles_labels()
ax.legend(handles[:6], labels[:6], bbox_to_anchor=(1, 1.02), loc='upper left')
sns.move_legend(ax, "lower center", bbox_to_anchor=(.5, 1), ncol=6, title=None, frameon=False, fontsize=10)
plt.savefig('barplot_ST_models.png', dpi=600, bbox_inches='tight')

sns.set(style = "ticks")

dd=pd.melt(df_final,id_vars=['Experiment'],value_vars=['ST-TA98','ST-TA100','ST-TA102','ST-TA1535','ST-TA1537','All-Tasks'],var_name='Models')
fig, ax = plt.subplots()
ax = sns.boxplot(x='Experiment',y='value',data=dd,hue='Models', ax=ax, palette="rocket_r", boxprops=dict(alpha=.1), linewidth=0.5, showfliers=False)
#plt.setp(ax.artists,fill=False) 
ylims=ax.get_ylim()
sns.stripplot(x="Experiment", y="value", hue='Models', data=dd, dodge=True, palette="rocket_r", ax=ax, ec='k', linewidth=0,  size=3, alpha = 1)
ax.set(ylim=ylims)
#ax.axhline(y =0.719, ls='--', c='darkred', linewidth = 0.5)
ax.set(xlabel='', ylabel='ROC-AUC')
sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))
#plt.legend([],[],frameon = False)
fig.set_figwidth(8)
fig.set_figheight(3.5)
handles, labels = ax.get_legend_handles_labels()
ax.legend(handles[:6], labels[:6], bbox_to_anchor=(1, 1.05), loc='upper left')
sns.move_legend(ax, "lower center", bbox_to_anchor=(.5, 1.05), ncol=6, title=None, frameon=False, fontsize=10)
plt.savefig('boxplot_ST_models.png', dpi=2000, bbox_inches='tight')


"""

######################################################################################

df = pd.DataFrame({'Metric': ['Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp','Sp'],\
                  '5-shot': np.asarray([0.9735, 0.9823, 0.9779, 0.9823, 0.9779, 0.9823, 0.9822, 0.9823, 0.9823, 0.9779, 0.9823, 0.9778, 0.9779, 0.9779, 0.9822, 0.9867, 0.9779, 0.9867, 0.9735, 0.9779, 0.9823, 0.9823, 0.9779, 0.9823, 0.9779, 0.9779, 0.9823, 0.9778, 0.9779, 0.9778]),
                  '10-shot': np.asarray([0.9774, 0.9819, 0.9818, 0.9774, 0.9774, 0.9819, 0.9774, 0.9819, 0.9774, 0.9818, 0.9819, 0.9819, 0.9818, 0.9819, 0.9819, 0.9819, 0.9818, 0.9773, 0.9774, 0.9774, 0.9864, 0.9773, 0.9774, 0.9774, 0.9774, 0.9818, 0.9774, 0.9773, 0.9819, 0.9773])
                  })


df = df[['Metric','5-shot', '10-shot']]

df2 = pd.DataFrame({'Metric': ['Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn','Sn'],\
                  '5-shot': np.asarray([0.9014, 0.9014, 0.9001, 0.8975, 0.8985, 0.8979, 0.8969, 0.8972, 0.8969, 0.8995, 0.8969, 0.9008, 0.9024, 0.9011, 0.8985, 0.8969, 0.8969, 0.8966, 0.9014, 0.8995, 0.8969, 0.8972, 0.904, 0.8969, 0.9001, 0.8979, 0.8979, 0.9027, 0.8975, 0.8992]),
                  '10-shot': np.asarray([0.8903, 0.8958, 0.8942, 0.9032, 0.8916, 0.8899, 0.9006, 0.886, 0.8906, 0.8883, 0.888, 0.8932, 0.8961, 0.8916, 0.8903, 0.886, 0.8861, 0.9074, 0.8916, 0.8983, 0.889, 0.8922, 0.8916, 0.8958, 0.9013, 0.8903, 0.8951, 0.9071, 0.9029, 0.8922])
                  })

df2 = df2[['Metric','5-shot', '10-shot']]

df3 = pd.DataFrame({'Metric': ['Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr','Pr'],\
                  '5-shot': np.asarray([0.9979, 0.9986, 0.9982, 0.9986, 0.9982, 0.9986, 0.9986, 0.9986, 0.9986, 0.9982, 0.9986, 0.9982, 0.9982, 0.9982, 0.9986, 0.9989, 0.9982, 0.9989, 0.9979, 0.9982, 0.9986, 0.9986, 0.9982, 0.9986, 0.9982, 0.9982, 0.9986, 0.9982, 0.9982, 0.9982]),
                  '10-shot': np.asarray([0.9982, 0.9986, 0.9986, 0.9982, 0.9982, 0.9985, 0.9982, 0.9985, 0.9982, 0.9985, 0.9985, 0.9986, 0.9986, 0.9985, 0.9985, 0.9985, 0.9985, 0.9982, 0.9982, 0.9982, 0.9989, 0.9982, 0.9982, 0.9982, 0.9982, 0.9985, 0.9982, 0.9982, 0.9986, 0.9982])
                  })

df3 = df3[['Metric','5-shot', '10-shot']]

df4 = pd.DataFrame({'Metric': ['Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc','Acc'],\
                  '5-shot': np.asarray([0.9063, 0.9069, 0.9054, 0.9033, 0.9039, 0.9036, 0.9027, 0.903, 0.9027, 0.9048, 0.9027, 0.906, 0.9075, 0.9063, 0.9042, 0.903, 0.9024, 0.9027, 0.9063, 0.9048, 0.9027, 0.903, 0.909, 0.9027, 0.9054, 0.9033, 0.9036, 0.9078, 0.903, 0.9045]),
                  '10-shot': np.asarray([0.8961, 0.9015, 0.9, 0.9082, 0.8973, 0.8961, 0.9057, 0.8924, 0.8964, 0.8946, 0.8943, 0.8991, 0.9018, 0.8976, 0.8964, 0.8924, 0.8924, 0.9121, 0.8973, 0.9036, 0.8955, 0.8979, 0.8973, 0.9012, 0.9063, 0.8964, 0.9006, 0.9118, 0.9082, 0.8979])
                  })

df4 = df4[['Metric','5-shot', '10-shot']]

df5 = pd.DataFrame({'Metric': ['F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s','F1s'],\
                  '5-shot': np.asarray([0.9472, 0.9475, 0.9466, 0.9454, 0.9457, 0.9455, 0.945, 0.9452, 0.945, 0.9463, 0.945, 0.947, 0.9479, 0.9472, 0.9459, 0.9452, 0.9448, 0.945, 0.9472, 0.9463, 0.945, 0.9452, 0.9488, 0.945, 0.9466, 0.9454, 0.9455, 0.9481, 0.9452, 0.9461]),
                  '10-shot': np.asarray([0.9411, 0.9444, 0.9435, 0.9483, 0.9419, 0.9411, 0.9469, 0.9389, 0.9413, 0.9402, 0.94, 0.9429, 0.9446, 0.942, 0.9413, 0.9389, 0.939, 0.9507, 0.9419, 0.9456, 0.9407, 0.9422, 0.9419, 0.9442, 0.9473, 0.9413, 0.9438, 0.9505, 0.9483, 0.9422])
                  
                  })

df5 = df5[['Metric','5-shot', '10-shot']]

df6 = pd.DataFrame({'Metric': ['ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC','ROC-AUC'],\
                  '5-shot': np.asarray([0.9374, 0.9419, 0.939, 0.9399, 0.9382, 0.9401, 0.9396, 0.9398, 0.9396, 0.9387, 0.9396, 0.9393, 0.9401, 0.9395, 0.9404, 0.9418, 0.9374, 0.9416, 0.9374, 0.9387, 0.9396, 0.9398, 0.9409, 0.9396, 0.939, 0.9379, 0.9401, 0.9403, 0.9377, 0.9385]),
                  '10-shot': np.asarray([0.9338, 0.9388, 0.938, 0.9403, 0.9345, 0.9359, 0.939, 0.934, 0.934, 0.9351, 0.9349, 0.9375, 0.939, 0.9367, 0.9361, 0.934, 0.934, 0.9424, 0.9345, 0.9379, 0.9377, 0.9348, 0.9345, 0.9366, 0.9393, 0.9361, 0.9362, 0.9422, 0.9424, 0.9348])
                  
                  })

df6 = df6[['Metric','5-shot', '10-shot']]

df_final = pd.concat([df, df2, df3, df4, df5, df6], ignore_index = True, sort = False)
dd=pd.melt(df_final,id_vars=['Metric'],value_vars=['5-shot', '10-shot'],var_name='Models')
fig, ax = plt.subplots()
sns.boxplot(x='Metric',y='value',data=dd,hue='Models', ax=ax)
sns.stripplot(x="Metric", y="value", hue='Models', data=dd, dodge=True, ax=ax, ec='k', linewidth=0.5)
#ax.axhline(y =0.719, ls='--', c='darkred', linewidth = 0.5)
sns.set(style = 'white')
ax.set(xlabel='', ylabel='Score')
sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))
#plt.legend([],[],frameon = False)
fig.set_figwidth(6)
handles, labels = ax.get_legend_handles_labels()
ax.legend(handles[:2], labels[:2], title='Experiments', bbox_to_anchor=(1, 1.02), loc='upper left')
plt.savefig('boxplot_Ames-FS-GNNTR.png', dpi=300, bbox_inches='tight')

dd=pd.melt(df_final,id_vars=['Metric'],value_vars=['Metric','5-shot', '10-shot'],var_name='Models')
fig, ax = plt.subplots()
ec = ['red', 'gray', 'black', 'blue']
sns.barplot(x='Metric',y='value',data=dd,hue='Models', ax=ax, linewidth=0.85,  errorbar="sd")
#sns.stripplot(x="Metric", y="value", hue='Models', data=dd, dodge=True, palette="YlGnBu", ax=ax, ec='k', linewidth=0.5,  size=2, alpha = 0.7)
sns.set(style = 'white')
#ax.axhline(y =0.719, ls='--', c='darkred', linewidth = 0.5)
ax.set(xlabel='', ylabel='Score')
sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))
#plt.legend([],[],frameon = False)
fig.set_figwidth(10)
handles, labels = ax.get_legend_handles_labels()
ax.legend(handles[:2], labels[:2], bbox_to_anchor=(1, 1.02), loc='upper left')
sns.move_legend(ax, "lower center", bbox_to_anchor=(.5, 1), ncol=4, title=None, frameon=False, fontsize=10)
plt.savefig('boxplot_Ames-FS-GNNTR.png', dpi=300, bbox_inches='tight')

"""

"""
df = pd.DataFrame({'Task': ['R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.', 'R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.', 'R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.'],\
                  'GIN':        np.asarray([0.7074, 0.6983, 0.7131, 0.7127, 0.7000, 0.7144, 0.6998, 0.7082, 0.6962, 0.6946, 0.6904, 0.6946, 0.6807, 0.6984, 0.7009, 0.7108, 0.7037, 0.7116, 0.6797, 0.6780, 0.6991, 0.6904, 0.6800, 0.7008, 0.7022, 0.6960, 0.6895, 0.6760, 0.6763, 0.6911]) ,
                  'GCN':        np.asarray([0.6202, 0.6195, 0.6111, 0.6147, 0.6138, 0.6132, 0.5987, 0.6237, 0.6203, 0.6159, 0.5745, 0.6019, 0.6056, 0.6038, 0.6011, 0.6087, 0.6146, 0.6243, 0.6013, 0.6075, 0.6098, 0.5986, 0.5913, 0.6204, 0.6183, 0.6142, 0.6075, 0.6016, 0.6072, 0.6164]) ,
                  'GraphSAGE':  np.asarray([0.6428, 0.6155, 0.6211, 0.6353, 0.6223, 0.6214, 0.6363, 0.6343, 0.6283, 0.6269, 0.6398, 0.6223, 0.6233, 0.6147, 0.6326, 0.6345, 0.6250, 0.6244, 0.6254, 0.6361, 0.6337, 0.6125, 0.6218, 0.6344, 0.6310, 0.6420, 0.6319, 0.6449, 0.6434, 0.6345]) ,
                  'FS-GNNCvTR': np.asarray([0.7165, 0.7148, 0.7160, 0.7149, 0.7132, 0.7160, 0.7133, 0.7148, 0.7143, 0.7127, 0.7127, 0.7154, 0.7132, 0.7180, 0.7143, 0.7154, 0.7127, 0.7122, 0.7154, 0.7159, 0.7137, 0.7132, 0.7164, 0.7165, 0.7180, 0.7159, 0.7116, 0.7159, 0.7143, 0.7143])
                  })


df = df[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df2 = pd.DataFrame({'Task': ['P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.'],\
                  'GIN':        np.asarray([0.7656, 0.7629, 0.7763, 0.7695, 0.7609, 0.7834, 0.7727, 0.7776, 0.7722, 0.7629, 0.7596, 0.7639, 0.7745, 0.7685, 0.7644, 0.7723, 0.764, 0.7707, 0.7784, 0.7663, 0.7773, 0.7749, 0.7699, 0.7734, 0.7579, 0.7726, 0.7617, 0.7699, 0.7666, 0.7626]) ,
                  'GCN':        np.asarray([0.7155, 0.7017, 0.7162, 0.7467, 0.6903, 0.7133, 0.7246, 0.7215, 0.7226, 0.734, 0.7356, 0.7256, 0.6979, 0.7209, 0.7131, 0.7257, 0.7039, 0.735, 0.7046, 0.7303, 0.7169, 0.7362, 0.7246, 0.7269, 0.7268, 0.7243, 0.717, 0.7082, 0.6863, 0.7119]) ,
                  'GraphSAGE':  np.asarray([0.7272, 0.7176, 0.7343, 0.7318, 0.7197, 0.7402, 0.7228, 0.7276, 0.724, 0.7267, 0.7293, 0.728, 0.7188, 0.7181, 0.7008, 0.7088, 0.6836, 0.726, 0.7231, 0.7309, 0.74, 0.741, 0.7158, 0.7126, 0.7076, 0.7318, 0.7236, 0.7417, 0.7192, 0.7268]) ,
                  'FS-GNNCvTR': np.asarray([0.7396, 0.7404, 0.7377, 0.7393, 0.7354, 0.7381, 0.7361, 0.7394, 0.7446, 0.7416, 0.7404, 0.7377, 0.7385, 0.74, 0.7354, 0.7355, 0.7338, 0.7369, 0.7366, 0.7424, 0.7435, 0.7397, 0.737, 0.7361, 0.7377, 0.7358, 0.74, 0.7374, 0.7361, 0.7354])
                  })

df2 = df2[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df3 = pd.DataFrame({'Task': ['E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.'],\
                  'GIN':        np.asarray([0.6983, 0.7018, 0.7049, 0.7008, 0.7111, 0.7195, 0.6978, 0.6975, 0.6995, 0.6997, 0.7012, 0.7025, 0.701, 0.703, 0.6967, 0.6924, 0.7012, 0.6972, 0.7012, 0.703, 0.6974, 0.7148, 0.7146, 0.7102, 0.7139, 0.6954, 0.6936, 0.7038, 0.7088, 0.7075]) ,
                  'GCN':        np.asarray([0.6237, 0.6383, 0.5971, 0.6392, 0.6447, 0.6345, 0.6439, 0.6378, 0.6441, 0.6225, 0.6215, 0.631, 0.6198, 0.635, 0.6381, 0.6162, 0.6475, 0.6257, 0.6398, 0.621, 0.6319, 0.638, 0.5998, 0.6301, 0.6399, 0.6456, 0.6071, 0.6386, 0.6367, 0.6515]) ,
                  'GraphSAGE':  np.asarray([0.6483, 0.6521, 0.6547, 0.6359, 0.6516, 0.6336, 0.6481, 0.6639, 0.6436, 0.6397, 0.6408, 0.637, 0.6546, 0.6556, 0.6517, 0.6486, 0.6397, 0.6577, 0.6542, 0.6409, 0.633, 0.6402, 0.6502, 0.6443, 0.6485, 0.6656, 0.6525, 0.6451, 0.6525, 0.657]) ,
                  'FS-GNNCvTR': np.asarray([0.7222, 0.7213, 0.7209, 0.7197, 0.723, 0.722, 0.7241, 0.7239, 0.7254, 0.7232, 0.7233, 0.7226, 0.7209, 0.7211, 0.7227, 0.7226, 0.7241, 0.7206, 0.7207, 0.7206, 0.7248, 0.7222, 0.7219, 0.7244, 0.7253, 0.7228, 0.7209, 0.7233, 0.7264, 0.7226])
                  })

df3 = df3[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df4 = pd.DataFrame({'Task': ['C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D'],\
                  'GIN':        np.asarray([0.6782, 0.687, 0.6739, 0.6886, 0.6937, 0.6736, 0.6668, 0.6771, 0.6911, 0.6959, 0.6807, 0.6982, 0.7002, 0.7, 0.6824, 0.6677, 0.6904, 0.6757, 0.6828, 0.6933, 0.6734, 0.6808, 0.6857, 0.678, 0.6806, 0.6937, 0.6645, 0.6767, 0.6767, 0.6815]) ,
                  'GCN':        np.asarray([0.6146, 0.6007, 0.6139, 0.6076, 0.5885, 0.609, 0.6243, 0.612, 0.6196, 0.6329, 0.6043, 0.5986, 0.6071, 0.5604, 0.5994, 0.6, 0.6151, 0.5972, 0.605, 0.6132, 0.6213, 0.6117, 0.6134, 0.6109, 0.6105, 0.5848, 0.6091, 0.6149, 0.6027, 0.6065]) ,
                  'GraphSAGE':  np.asarray([0.6221, 0.6366, 0.6268, 0.6241, 0.6231, 0.6227, 0.6447, 0.6373, 0.6424, 0.593, 0.6382, 0.621, 0.6125, 0.6337, 0.617, 0.6328, 0.6453, 0.6228, 0.617, 0.6343, 0.6119, 0.6429, 0.6393, 0.623, 0.6299, 0.6359, 0.6304, 0.6282, 0.6359, 0.6125]) ,
                  'FS-GNNCvTR': np.asarray([0.7283, 0.7272, 0.7247, 0.7264, 0.7312, 0.7278, 0.7254, 0.7276, 0.7315, 0.7277, 0.7275, 0.7293, 0.7294, 0.7291, 0.7288, 0.7272, 0.727, 0.7309, 0.7292, 0.7286, 0.7307, 0.7295, 0.7311, 0.7319, 0.7302, 0.73, 0.7259, 0.7268, 0.7327, 0.7341])
                  })

df4 = df4[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df5 = pd.DataFrame({'Task': ['N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.'],\
                  'GIN':        np.asarray([0.654, 0.6621, 0.6524, 0.6547, 0.6479, 0.6434, 0.6607, 0.6519, 0.6461, 0.6533, 0.6466, 0.6515, 0.6487, 0.6519, 0.6486, 0.6664, 0.6347, 0.6575, 0.6658, 0.6533, 0.637, 0.6484, 0.6453, 0.6412, 0.6593, 0.6329, 0.6455, 0.6491, 0.6402, 0.6483]) ,
                  'GCN':        np.asarray([0.5253, 0.6031, 0.5693, 0.5787, 0.5694, 0.6131, 0.5689, 0.5781, 0.5601, 0.6005, 0.5712, 0.5928, 0.5835, 0.6197, 0.589, 0.6009, 0.6016, 0.5688, 0.5748, 0.5856, 0.5805, 0.6033, 0.5986, 0.6004, 0.6026, 0.6085, 0.5923, 0.582, 0.5827, 0.5376]) ,
                  'GraphSAGE':  np.asarray([0.5819, 0.6104, 0.5894, 0.6183, 0.5769, 0.6039, 0.6078, 0.5776, 0.6038, 0.5986, 0.5977, 0.6064, 0.5791, 0.5961, 0.6009, 0.5882, 0.5959, 0.5905, 0.6013, 0.6118, 0.594, 0.5807, 0.5977, 0.6076, 0.5935, 0.593, 0.5838, 0.589, 0.5998, 0.6085]) ,
                  'FS-GNNCvTR': np.asarray([0.675, 0.6746, 0.6634, 0.667, 0.675, 0.6811, 0.6728, 0.6666, 0.672, 0.6712, 0.669, 0.6708, 0.6739, 0.6784, 0.6742, 0.678, 0.6652, 0.6716, 0.6656, 0.6678, 0.6641, 0.6647, 0.6742, 0.6792, 0.6818, 0.6758, 0.6659, 0.6709, 0.672, 0.6692])
                  })

df5 = df5[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df6 = pd.DataFrame({'Task': ['I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.'],\
                  'GIN':        np.asarray([0.7242, 0.7327, 0.7328, 0.7339, 0.7095, 0.7337, 0.7389, 0.7356, 0.7486, 0.7458, 0.7361, 0.721, 0.7349, 0.7368, 0.717, 0.74, 0.7011, 0.7194, 0.7156, 0.7411, 0.7389, 0.7361, 0.7444, 0.7323, 0.7344, 0.7372, 0.7368, 0.7334, 0.7331, 0.717]) ,
                  'GCN':        np.asarray([0.6556, 0.6783, 0.6729, 0.6445, 0.6762, 0.6434, 0.6306, 0.6584, 0.6679, 0.6731, 0.6737, 0.6748, 0.6492, 0.6237, 0.6665, 0.6489, 0.6773, 0.6709, 0.6559, 0.673, 0.6715, 0.6546, 0.6411, 0.6548, 0.6286, 0.651, 0.6514, 0.6629, 0.6547, 0.6506]) ,
                  'GraphSAGE':  np.asarray([0.6743, 0.6697, 0.6575, 0.6879, 0.6901, 0.6911, 0.6618, 0.6843, 0.6537, 0.6872, 0.6962, 0.679, 0.6661, 0.6817, 0.6719, 0.6781, 0.6874, 0.6693, 0.691, 0.6839, 0.6702, 0.6721, 0.6771, 0.7018, 0.6671, 0.6685, 0.6766, 0.6609, 0.6651, 0.6835]) ,
                  'FS-GNNCvTR': np.asarray([0.7369, 0.7379, 0.7381, 0.7373, 0.7408, 0.7382, 0.7389, 0.7364, 0.7362, 0.7363, 0.7379, 0.7386, 0.7372, 0.7373, 0.7367, 0.7396, 0.7345, 0.736, 0.7383, 0.7361, 0.7378, 0.7369, 0.7356, 0.7365, 0.7381, 0.7399, 0.7382, 0.7376, 0.7411, 0.738])
                  })

df6 = df6[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df_final = pd.concat([df, df2, df3, df4, df5, df6], ignore_index = True, sort = False)

dd=pd.melt(df_final,id_vars=['Task'],value_vars=['GIN','GCN','GraphSAGE','FS-GNNCvTR'],var_name='Models')
fig, ax = plt.subplots()
sns.boxplot(x='Task',y='value',data=dd,hue='Models', ax=ax)
ax.axhline(y =0.719, ls='--', c='darkred', linewidth = 0.5)
ax.set(xlabel='Task', ylabel='ROC-AUC score')
sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))
#plt.legend([],[],frameon = False)
plt.savefig('drive/MyDrive/LuisTorres_colab/FS-GNNTR/boxplot_sider_5.png', dpi=300, bbox_inches='tight')

########################################################################

df = pd.DataFrame({'Task': ['SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE'],\
                  'GIN':        np.asarray([0.6107, 0.6131, 0.6067, 0.6276, 0.6178, 0.6153, 0.6219, 0.6131, 0.6044, 0.6099, 0.6159, 0.6132, 0.6185, 0.6044, 0.6161, 0.6328, 0.5929, 0.61, 0.6056, 0.6105, 0.6152, 0.5998, 0.6235, 0.6067, 0.6131, 0.6129, 0.6112, 0.6031, 0.6111, 0.5923]) ,
                  'GCN':        np.asarray([0.6681, 0.6793, 0.6671, 0.6705, 0.6312, 0.6736, 0.6362, 0.6817, 0.6438, 0.646, 0.6382, 0.6691, 0.6491, 0.6353, 0.6779, 0.6918, 0.6602, 0.6479, 0.6762, 0.6947, 0.6591, 0.6474, 0.6447, 0.6372, 0.6887, 0.6656, 0.6451, 0.6375, 0.6763, 0.6891]) ,
                  'GraphSAGE':  np.asarray([0.6604, 0.6485, 0.6439, 0.6642, 0.5739, 0.6889, 0.6845, 0.6661, 0.6438, 0.7152, 0.694, 0.6907, 0.641, 0.6774, 0.698, 0.667, 0.6356, 0.5766, 0.5812, 0.6606, 0.5728, 0.6689, 0.6766, 0.6226, 0.6085, 0.6647, 0.6578, 0.7011, 0.6347, 0.6097]) ,
                  'FS-GNNCvTR': np.asarray([0.7766, 0.7801, 0.7764, 0.7733, 0.779, 0.7812, 0.7755, 0.7781, 0.781, 0.7774, 0.7777, 0.7774, 0.7779, 0.7762, 0.7768, 0.7776, 0.7755, 0.7788, 0.7767, 0.7784, 0.7796, 0.7784, 0.7783, 0.7756, 0.7772, 0.7805, 0.7788, 0.7755, 0.7793, 0.7777])
                  })


df = df[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df2 = pd.DataFrame({'Task': ['SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP'],\
                  'GIN':        np.asarray([0.5931, 0.5815, 0.5754, 0.577, 0.5627, 0.5853, 0.5656, 0.5811, 0.5907, 0.5631, 0.5663, 0.569, 0.5882, 0.5659, 0.5812, 0.568, 0.5703, 0.593, 0.5889, 0.5736, 0.5746, 0.5751, 0.574, 0.5874, 0.5895, 0.5741, 0.5769, 0.5702, 0.5835, 0.5877]) ,
                  'GCN':        np.asarray([0.6841, 0.6477, 0.6597, 0.6859, 0.6417, 0.6639, 0.6598, 0.6643, 0.6561, 0.6648, 0.6684, 0.6532, 0.6369, 0.6645, 0.6716, 0.6538, 0.6401, 0.6558, 0.6424, 0.6638, 0.6614, 0.6348, 0.6722, 0.6577, 0.6474, 0.6653, 0.6622, 0.6257, 0.6623, 0.6309]) ,
                  'GraphSAGE':  np.asarray([0.6931, 0.6424, 0.6937, 0.6512, 0.7176, 0.6947, 0.7083, 0.6954, 0.662, 0.6547, 0.6647, 0.6594, 0.6935, 0.6547, 0.6898, 0.6925, 0.6387, 0.6928, 0.6813, 0.7021, 0.6772, 0.6691, 0.6532, 0.6808, 0.6507, 0.6718, 0.6145, 0.6061, 0.6287, 0.5793]) ,
                  'FS-GNNCvTR': np.asarray([0.796, 0.7965, 0.7981, 0.7956, 0.7967, 0.7954, 0.7972, 0.7979, 0.7965, 0.7969, 0.7961, 0.7968, 0.796, 0.7966, 0.7951, 0.7967, 0.7972, 0.7951, 0.7969, 0.7969, 0.7961, 0.7967, 0.7957, 0.7969, 0.7985, 0.7948, 0.7961, 0.797, 0.7952, 0.7959])
                  })


df2 = df2[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df3 = pd.DataFrame({'Task': ['SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53'],\
                  'GIN':        np.asarray([0.5977, 0.5978, 0.5899, 0.6043, 0.6086, 0.6076, 0.5877, 0.5809, 0.5835, 0.6024, 0.5905, 0.5855, 0.5882, 0.5751, 0.5787, 0.583, 0.5858, 0.601, 0.5832, 0.6078, 0.589, 0.5861, 0.5738, 0.5942, 0.5959, 0.6003, 0.5698, 0.5848, 0.5983, 0.5762]) ,
                  'GCN':        np.asarray([0.6142, 0.6303, 0.6046, 0.6128, 0.6146, 0.612, 0.6103, 0.633, 0.627, 0.6045, 0.5937, 0.6359, 0.6253, 0.6076, 0.6132, 0.6379, 0.6574, 0.6026, 0.6465, 0.6084, 0.6303, 0.605, 0.6278, 0.6261, 0.6222, 0.6262, 0.6032, 0.6309, 0.6203, 0.646]) ,
                  'GraphSAGE':  np.asarray([0.6544, 0.6493, 0.6231, 0.6076, 0.6422, 0.6299, 0.6245, 0.6521, 0.663, 0.6761, 0.6624, 0.6317, 0.6714, 0.6634, 0.5979, 0.6566, 0.6469, 0.6354, 0.6207, 0.6534, 0.5813, 0.6706, 0.6508, 0.6621, 0.6609, 0.6593, 0.6395, 0.6754, 0.6532, 0.5935]) ,
                  'FS-GNNCvTR': np.asarray([0.7378, 0.738, 0.7409, 0.7409, 0.7394, 0.7378, 0.7441, 0.7414, 0.7399, 0.7395, 0.7399, 0.7383, 0.7455, 0.7386, 0.7408, 0.7379, 0.7413, 0.74, 0.7384, 0.7379, 0.7379, 0.7386, 0.7394, 0.7417, 0.7422, 0.7376, 0.7387, 0.7377, 0.7397, 0.7385])
                  })


df3 = df3[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df_final = pd.concat([df, df2, df3], ignore_index = True, sort = False)

dd=pd.melt(df_final,id_vars=['Task'],value_vars=['GIN','GCN','GraphSAGE','FS-GNNCvTR'],var_name='Models')
fig, ax = plt.subplots()
sns.boxplot(x='Task',y='value',data=dd,hue='Models', ax=ax)
ax.axhline(y =0.7713, ls='--', c='darkred', linewidth = 0.5)
ax.set(xlabel='Task', ylabel='ROC-AUC score')
#sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))
plt.legend([],[],frameon = False)
plt.savefig('drive/MyDrive/LuisTorres_colab/FS-GNNTR/boxplot_tox21_5.png', dpi=300)#, bbox_inches='tight')

##############################################################

df = pd.DataFrame({'Task': ['R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.', 'R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.', 'R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.','R.U.D.'],\
                  'GIN':        np.asarray([0.6935, 0.6916, 0.6894, 0.6881, 0.6924, 0.6918, 0.6963, 0.6892, 0.6934, 0.6951, 0.6872, 0.6899, 0.6951, 0.6949, 0.6928, 0.6924, 0.6783, 0.6891, 0.6926, 0.6924, 0.6881, 0.6918, 0.6931, 0.6911, 0.6824, 0.6853, 0.6918, 0.6897, 0.6892, 0.6877]) ,
                  'GCN':        np.asarray([0.5929, 0.5942, 0.5914, 0.5989, 0.5983, 0.592, 0.6039, 0.5955, 0.6065, 0.588, 0.6014, 0.5919, 0.5957, 0.6024, 0.6081, 0.603, 0.6019, 0.5973, 0.6012, 0.5985, 0.6029, 0.6068, 0.6016, 0.6032, 0.6055, 0.6044, 0.5961, 0.6098, 0.5937, 0.5992]) ,
                  'GraphSAGE':  np.asarray([0.6378, 0.632, 0.6335, 0.6353, 0.6341, 0.6219, 0.6413, 0.6424, 0.6224, 0.6378, 0.6371, 0.6405, 0.6342, 0.637, 0.6411, 0.6406, 0.6406, 0.6267, 0.6312, 0.6381, 0.6371, 0.6436, 0.6469, 0.6411, 0.6476, 0.6352, 0.6379, 0.6348, 0.6407, 0.633]) ,
                  'FS-GNNCvTR': np.asarray([0.7134, 0.7101, 0.7129, 0.7096, 0.7096, 0.7129, 0.7107, 0.7101, 0.7096, 0.7145, 0.7117, 0.7117, 0.7107, 0.7096, 0.7112, 0.7165, 0.7128, 0.7107, 0.7134, 0.7166, 0.7102, 0.7112, 0.7145, 0.7107, 0.7112, 0.7112, 0.7161, 0.7145, 0.7144, 0.7128])
                  })


df = df[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df2 = pd.DataFrame({'Task': ['P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.','P.P.P.C.'],\
                  'GIN':        np.asarray([0.7816, 0.7823, 0.784, 0.7663, 0.7748, 0.776, 0.7666, 0.79, 0.7678, 0.7906, 0.7704, 0.7904, 0.7739, 0.774, 0.7866, 0.7811, 0.7787, 0.7797, 0.7727, 0.7682, 0.7832, 0.7923, 0.7782, 0.7863, 0.7829, 0.7751, 0.7897, 0.7976, 0.788, 0.7779]) ,
                  'GCN':        np.asarray([0.7321, 0.6944, 0.7378, 0.7193, 0.7034, 0.741, 0.7336, 0.726, 0.6947, 0.6916, 0.7069, 0.7053, 0.7057, 0.6995, 0.7473, 0.7078, 0.7249, 0.7144, 0.7084, 0.7044, 0.7301, 0.7135, 0.7267, 0.7269, 0.7186, 0.6925, 0.7116, 0.7312, 0.7204, 0.7025]) ,
                  'GraphSAGE':  np.asarray([0.7338, 0.744, 0.7413, 0.753, 0.7323, 0.7252, 0.7366, 0.7166, 0.7441, 0.7273, 0.7321, 0.7377, 0.7378, 0.733, 0.7475, 0.7475, 0.7376, 0.7373, 0.738, 0.7261, 0.7308, 0.7436, 0.725, 0.7255, 0.7202, 0.7247, 0.7446, 0.7265, 0.7382, 0.743]) ,
                  'FS-GNNCvTR': np.asarray([0.7327, 0.7268, 0.7235, 0.7265, 0.7303, 0.725, 0.7204, 0.72, 0.7246, 0.7211, 0.7243, 0.7279, 0.7244, 0.7254, 0.7259, 0.7323, 0.7287, 0.7267, 0.7232, 0.7215, 0.7267, 0.7238, 0.7275, 0.7208, 0.7327, 0.7184, 0.723, 0.7224, 0.7275, 0.7254])
                  })

df2 = df2[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df3 = pd.DataFrame({'Task': ['E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.','E.L.D.'],\
                  'GIN':        np.asarray([0.7045, 0.711, 0.7108, 0.6985, 0.7133, 0.7048, 0.7037, 0.7049, 0.7064, 0.7068, 0.7105, 0.7108, 0.7136, 0.713, 0.7054, 0.7087, 0.7144, 0.7059, 0.7124, 0.71, 0.7069, 0.7089, 0.7143, 0.7027, 0.7052, 0.7116, 0.7101, 0.711, 0.7119, 0.7042]) ,
                  'GCN':        np.asarray([0.6267, 0.6247, 0.6131, 0.6101, 0.6292, 0.6246, 0.6148, 0.6226, 0.616, 0.6236, 0.6201, 0.6199, 0.6233, 0.6094, 0.6103, 0.6185, 0.5908, 0.6159, 0.6238, 0.6038, 0.6071, 0.6256, 0.6277, 0.6129, 0.6129, 0.6112, 0.5996, 0.6209, 0.6355, 0.62]) ,
                  'GraphSAGE':  np.asarray([0.6362, 0.6445, 0.6391, 0.6485, 0.6456, 0.6472, 0.6491, 0.6396, 0.6241, 0.6527, 0.6475, 0.6498, 0.6468, 0.6547, 0.6577, 0.6499, 0.6373, 0.6471, 0.6419, 0.6401, 0.6498, 0.634, 0.6522, 0.6476, 0.6394, 0.6372, 0.6498, 0.6576, 0.65, 0.6405]) ,
                  'FS-GNNCvTR': np.asarray([0.7171, 0.7227, 0.7228, 0.7232, 0.7181, 0.721, 0.7255, 0.7263, 0.7208, 0.7184, 0.7239, 0.7249, 0.7207, 0.7203, 0.7273, 0.7212, 0.7207, 0.7248, 0.7234, 0.7261, 0.7263, 0.7241, 0.7228, 0.7152, 0.7202, 0.7244, 0.7241, 0.7263, 0.7224, 0.7198])
                  })

df3 = df3[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df4 = pd.DataFrame({'Task': ['C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D','C.D'],\
                  'GIN':        np.asarray([0.6707, 0.6871, 0.6878, 0.693, 0.6784, 0.6707, 0.6729, 0.6763, 0.6689, 0.6696, 0.6781, 0.6719, 0.6737, 0.6752, 0.672, 0.6748, 0.6752, 0.6856, 0.6621, 0.6713, 0.6714, 0.67, 0.6822, 0.6771, 0.6853, 0.6742, 0.6596, 0.6728, 0.6852, 0.6733]) ,
                  'GCN':        np.asarray([0.5941, 0.6011, 0.5956, 0.5955, 0.5989, 0.5801, 0.5895, 0.5944, 0.567, 0.5934, 0.5792, 0.5691, 0.5922, 0.5925, 0.5885, 0.5679, 0.5925, 0.596, 0.5705, 0.5987, 0.5962, 0.6006, 0.6019, 0.5923, 0.5879, 0.5522, 0.5963, 0.6007, 0.5981, 0.5919]) ,
                  'GraphSAGE':  np.asarray([0.6395, 0.6422, 0.6416, 0.6308, 0.6461, 0.6136, 0.6275, 0.6242, 0.6214, 0.6272, 0.6383, 0.6346, 0.6375, 0.6362, 0.6344, 0.6463, 0.6423, 0.6458, 0.6352, 0.6318, 0.6279, 0.6272, 0.6303, 0.6345, 0.6257, 0.6243, 0.6292, 0.6304, 0.6361, 0.6364]) ,
                  'FS-GNNCvTR': np.asarray([0.7326, 0.7381, 0.7311, 0.7327, 0.7285, 0.7311, 0.7305, 0.7329, 0.7299, 0.733, 0.7329, 0.7341, 0.7332, 0.7305, 0.7311, 0.7293, 0.7305, 0.7329, 0.7307, 0.7305, 0.7306, 0.735, 0.7339, 0.7327, 0.7322, 0.7302, 0.7305, 0.73, 0.7327, 0.7272])
                  })

df4 = df4[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df5 = pd.DataFrame({'Task': ['N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.','N.S.D.'],\
                  'GIN':        np.asarray([0.672, 0.6675, 0.6544, 0.6555, 0.6546, 0.6449, 0.6679, 0.6431, 0.6576, 0.653, 0.6484, 0.6462, 0.6615, 0.659, 0.6657, 0.6657, 0.6673, 0.6788, 0.6657, 0.6637, 0.6614, 0.6532, 0.6634, 0.6607, 0.6573, 0.664, 0.6642, 0.6576, 0.6697, 0.6412]) ,
                  'GCN':        np.asarray([0.5872, 0.5745, 0.6014, 0.6018, 0.567, 0.534, 0.5673, 0.5482, 0.5621, 0.5822, 0.5715, 0.562, 0.5782, 0.5853, 0.5593, 0.583, 0.5707, 0.5791, 0.5786, 0.6, 0.5585, 0.5971, 0.5778, 0.5868, 0.5779, 0.6008, 0.5697, 0.5801, 0.5676, 0.5991]) ,
                  'GraphSAGE':  np.asarray([0.6086, 0.6128, 0.61, 0.5801, 0.5907, 0.6134, 0.6009, 0.5684, 0.5792, 0.5693, 0.6118, 0.5903, 0.5959, 0.6024, 0.5893, 0.5807, 0.6032, 0.5751, 0.5676, 0.5983, 0.5919, 0.6038, 0.5625, 0.5934, 0.5816, 0.5937, 0.5829, 0.6235, 0.6091, 0.5923]) ,
                  'FS-GNNCvTR': np.asarray([0.6726, 0.6735, 0.675, 0.6699, 0.6707, 0.6722, 0.6643, 0.6718, 0.6833, 0.6743, 0.6813, 0.6628, 0.6735, 0.6766, 0.675, 0.6833, 0.6789, 0.6718, 0.6683, 0.6667, 0.6734, 0.6637, 0.6718, 0.6699, 0.6786, 0.679, 0.6793, 0.673, 0.6806, 0.6858])
                  })

df5 = df5[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df6 = pd.DataFrame({'Task': ['I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.','I.P.P.C.'],\
                  'GIN':        np.asarray([0.7401, 0.738, 0.7336, 0.7498, 0.7201, 0.7346, 0.7323, 0.7445, 0.7427, 0.7378, 0.7331, 0.7413, 0.7349, 0.7433, 0.7312, 0.7453, 0.746, 0.7402, 0.7436, 0.7519, 0.7454, 0.7142, 0.7462, 0.7197, 0.7395, 0.7378, 0.741, 0.7413, 0.7454, 0.7332]) ,
                  'GCN':        np.asarray([0.6571, 0.64, 0.6444, 0.6544, 0.6199, 0.6517, 0.6604, 0.6016, 0.6522, 0.6393, 0.6508, 0.6241, 0.6249, 0.6478, 0.6305, 0.6464, 0.6006, 0.6483, 0.6417, 0.63, 0.6323, 0.6592, 0.6187, 0.6279, 0.6523, 0.6496, 0.6334, 0.6437, 0.6575, 0.6221]) ,
                  'GraphSAGE':  np.asarray([0.6955, 0.6771, 0.6774, 0.6857, 0.6855, 0.6841, 0.6884, 0.6893, 0.6964, 0.6613, 0.7078, 0.6878, 0.6962, 0.6957, 0.6934, 0.6787, 0.6831, 0.7121, 0.6852, 0.6785, 0.6889, 0.6836, 0.6769, 0.6754, 0.6935, 0.6937, 0.6756, 0.6755, 0.693, 0.6952]) ,
                  'FS-GNNCvTR': np.asarray([0.7377, 0.7294, 0.7319, 0.7369, 0.7352, 0.7349, 0.732, 0.7315, 0.736, 0.7333, 0.7319, 0.7302, 0.7334, 0.7327, 0.7327, 0.7342, 0.7351, 0.7303, 0.7349, 0.7337, 0.7354, 0.7304, 0.7367, 0.7315, 0.7329, 0.7332, 0.7332, 0.7347, 0.7374, 0.7314])
                  })

df6 = df6[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df_final = pd.concat([df, df2, df3, df4, df5, df6], ignore_index = True, sort = False)

dd=pd.melt(df_final,id_vars=['Task'],value_vars=['GIN','GCN','GraphSAGE','FS-GNNCvTR'],var_name='Models')
fig, ax = plt.subplots()
sns.boxplot(x='Task',y='value',data=dd,hue='Models', ax=ax)
ax.axhline(y =0.7165, ls='--', c='darkred', linewidth = 0.5)
ax.set(xlabel='Task', ylabel='ROC-AUC score')
sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))
#plt.legend([],[],frameon = False)
plt.savefig('drive/MyDrive/LuisTorres_colab/FS-GNNTR/boxplot_sider_10.png', dpi=300, bbox_inches='tight')

##########################################################


df = pd.DataFrame({'Task': ['SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE','SR-HSE'],\
                  'GIN':        np.asarray([0.6667, 0.6496, 0.664, 0.6554, 0.6355, 0.6679, 0.6705, 0.6569, 0.6456, 0.654, 0.6573, 0.6456, 0.639, 0.6221, 0.6646, 0.6567, 0.6667, 0.6491, 0.6692, 0.6588, 0.6659, 0.6437, 0.657, 0.6766, 0.6519, 0.6688, 0.6374, 0.6741, 0.6448, 0.6459]) ,
                  'GCN':        np.asarray([0.6587, 0.649, 0.6743, 0.6613, 0.6655, 0.6356, 0.6758, 0.6525, 0.562, 0.6533, 0.665, 0.6439, 0.6621, 0.6499, 0.642, 0.6507, 0.6538, 0.6347, 0.6644, 0.6704, 0.6664, 0.6474, 0.6653, 0.6263, 0.6575, 0.665, 0.6585, 0.6537, 0.634, 0.6662]) ,
                  'GraphSAGE':  np.asarray([0.6821, 0.6559, 0.6296, 0.6772, 0.6809, 0.6702, 0.6534, 0.666, 0.702, 0.7033, 0.6782, 0.7123, 0.6703, 0.664, 0.6437, 0.635, 0.6666, 0.6491, 0.6747, 0.6641, 0.6709, 0.7, 0.6868, 0.692, 0.6458, 0.6741, 0.6424, 0.6674, 0.6803, 0.6142]) ,
                  'FS-GNNCvTR': np.asarray([0.783, 0.783, 0.7817, 0.7853, 0.7849, 0.783, 0.7835, 0.7847, 0.782, 0.7849, 0.783, 0.7871, 0.7839, 0.7823, 0.7831, 0.7815, 0.7846, 0.7848, 0.7811, 0.7845, 0.7884, 0.7876, 0.7825, 0.7846, 0.7878, 0.7854, 0.787, 0.784, 0.7869, 0.785])
                  })


df = df[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df2 = pd.DataFrame({'Task': ['SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP','SR-MMP'],\
                  'GIN':        np.asarray([0.647, 0.6175, 0.6212, 0.6353, 0.6225, 0.6216, 0.6281, 0.6271, 0.6376, 0.6208, 0.6255, 0.6284, 0.6293, 0.638, 0.617, 0.6207, 0.6455, 0.6449, 0.5896, 0.6337, 0.657, 0.6002, 0.6083, 0.6218, 0.6065, 0.6369, 0.6189, 0.6323, 0.6239, 0.6225]) ,
                  'GCN':        np.asarray([0.6269, 0.6685, 0.6799, 0.6571, 0.6792, 0.6559, 0.6568, 0.6868, 0.6402, 0.6618, 0.6637, 0.6704, 0.6609, 0.6328, 0.6417, 0.6568, 0.6569, 0.6488, 0.6794, 0.6647, 0.6763, 0.6738, 0.6633, 0.6618, 0.66, 0.6655, 0.6509, 0.6712, 0.6791, 0.6457]) ,
                  'GraphSAGE':  np.asarray([0.6993, 0.6781, 0.7135, 0.6992, 0.6757, 0.6984, 0.7032, 0.6632, 0.678, 0.6911, 0.6846, 0.6947, 0.6983, 0.6622, 0.6975, 0.7132, 0.7037, 0.6835, 0.6825, 0.7086, 0.7035, 0.6898, 0.6522, 0.6896, 0.6956, 0.6631, 0.7107, 0.7038, 0.6996, 0.7006]) ,
                  'FS-GNNCvTR': np.asarray([0.7989, 0.8017, 0.8022, 0.8024, 0.7994, 0.8008, 0.8007, 0.8011, 0.8001, 0.8023, 0.8011, 0.7988, 0.8001, 0.7995, 0.7987, 0.7989, 0.7998, 0.8024, 0.7995, 0.8011, 0.8004, 0.7997, 0.8006, 0.8, 0.7999, 0.8009, 0.8016, 0.7994, 0.802, 0.8002])
                  })


df2 = df2[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df3 = pd.DataFrame({'Task': ['SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53','SR-p53'],\
                  'GIN':        np.asarray([0.6258, 0.6141, 0.6257, 0.6065, 0.6345, 0.6389, 0.6227, 0.6311, 0.6224, 0.6288, 0.6335, 0.6243, 0.6369, 0.631, 0.6316, 0.6225, 0.6102, 0.6164, 0.6305, 0.6486, 0.6363, 0.6272, 0.6375, 0.641, 0.6178, 0.6382, 0.6309, 0.6377, 0.6395, 0.6283]) ,
                  'GCN':        np.asarray([0.6169, 0.6384, 0.6035, 0.6339, 0.6407, 0.6515, 0.6364, 0.6353, 0.6299, 0.6459, 0.6435, 0.6317, 0.6181, 0.6354, 0.6461, 0.6417, 0.6447, 0.6407, 0.634, 0.6453, 0.6257, 0.6236, 0.649, 0.6479, 0.6319, 0.638, 0.6076, 0.6395, 0.613, 0.6087]) ,
                  'GraphSAGE':  np.asarray([0.6703, 0.6538, 0.6423, 0.674, 0.661, 0.6362, 0.6389, 0.6219, 0.6606, 0.6521, 0.6406, 0.651, 0.6483, 0.6607, 0.6673, 0.6709, 0.6508, 0.6321, 0.6424, 0.6508, 0.6515, 0.6241, 0.6735, 0.66, 0.6517, 0.6378, 0.6417, 0.6448, 0.6456, 0.6601]) ,
                  'FS-GNNCvTR': np.asarray([0.7378, 0.7417, 0.7406, 0.7404, 0.7395, 0.7376, 0.7403, 0.7373, 0.74, 0.7434, 0.7439, 0.7361, 0.7439, 0.7381, 0.7427, 0.7413, 0.7434, 0.7436, 0.7399, 0.7417, 0.7445, 0.7423, 0.739, 0.739, 0.7364, 0.7445, 0.7437, 0.7406, 0.74, 0.7402])
                  })


df3 = df3[['Task','GIN','GCN','GraphSAGE','FS-GNNCvTR']]

df_final = pd.concat([df, df2, df3], ignore_index = True, sort = False)

dd=pd.melt(df_final,id_vars=['Task'],value_vars=['GIN','GCN','GraphSAGE','FS-GNNCvTR'],var_name='Models')
fig, ax = plt.subplots()
sns.boxplot(x='Task',y='value',data=dd,hue='Models', ax=ax)
ax.axhline(y =0.7752, ls='--', c='darkred', linewidth = 0.5)
ax.set(xlabel='Task', ylabel='ROC-AUC score')
#sns.move_legend(ax, "upper left", bbox_to_anchor=(1, 1))
plt.legend([],[],frameon = False)
plt.savefig('drive/MyDrive/LuisTorres_colab/FS-GNNTR/boxplot_tox21_10.png', dpi=300)#, bbox_inches='tight')
"""